# SYNTAX TEST "Packages/SSH Config/SSH Config.sublime-syntax"

Match Host targ?t_host Exec not_inside_network User sue
# ^^^ keyword.control.conditional
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional
#     ^^^^             keyword.other
#          ^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#              ^       constant.language.wildcard.ssh_config
#                      ^^^^                    keyword.other.ssh_config
#                           ^^^^^^^^^^^^^^^^^^ source.embedded.shell meta.function-call.shell
#                          ^                    - source.embedded.shell
#                                             ^ - source.embedded.shell
#                                              ^^^^     keyword.other
#                                                   ^^^ string.unquoted
#                                                      ^ - meta.statement
    ProxyCommand ssh -W %h:%p proxy_server
    # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match
    # ^^^^^^^^^^                             keyword.other
    #            ^^^^^^^^^^^^^^^^^^^^^^^^^   source.embedded.shell
    #                   ^^                   constant.character.escape.ssh_config
    #                      ^^                constant.character.escape.ssh_config
    #                                      ^  - source.ssh_config.embedded.shell

Match Host one,two
# ^^^ keyword.control.conditional
#     ^^^^^^^^^^^^ meta.statement.conditional
#     ^^^^             keyword.other
#          ^^^ entity.name.label.host-alias.ssh_config
#             ^ punctuation.separator.sequence.ssh_config - entity
#              ^^^ entity.name.label.host-alias.ssh_config
    User bar

Host server serverino !other-pat?ern
# <- meta.block.host - meta.block.match
# ^^                  keyword.declaration.host-alias
#   ^                 - entity.name.label.host-alias
#    ^^^^^^           entity.name.label.host-alias
#          ^          - entity.name.label.host-alias
#           ^^^^^^^^^ entity.name.label.host-alias
#                    ^               - entity.name.label.host-alias
#                     ^              keyword.operator.logical.ssh_config
#                      ^^^^^^^^^^^^^ entity.name.label.host-alias
    Hostname server.com
    # ^^^^^^            keyword.declaration.host
    #        ^^^^^^^^^^ string.unquoted.hostname
    # This is meant to be a comment
    # <- punctuation.definition.comment
    # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.number-sign
    User=will
    # ^^      keyword.other
    #   ^     keyword.operator.assignment
    #    ^^^^ string.unquoted
    ProxyCommand nc -x localhost:8888 %h %p
    # ^^^^^^^^^^                             keyword.other
    #            ^^^^^^^^^^^^^^^^^^^^^^^^^^  source.embedded.shell
    #                                 ^^     constant.character.escape.ssh_config
    #                                      ^ - source.ssh_config.embedded.shell
    IdentityFile ~/.ssh/creds/%h.pem
    # ^^^^^^^^^^                     keyword.other
    #            ^^^^^^^^^^^^^^^^^^^ string.unquoted
    #                         ^^     constant.character.escape

Host *.splat?.com
# ^^              keyword.declaration.host-alias
#   ^             - entity.name.label.host-alias
#    ^^^^^^^^^^^^ entity.name.label.host-alias
#    ^            constant.language.wildcard
#           ^     constant.language.wildcard
    User tim
    # ^^     keyword.other
    #    ^^^ string.unquoted
    Compression yes
    CompressionLevel 7
    # ^^^^^^^^^^^^^^ keyword.other.ssh_config - invalid.illegal


Host *
# ^^              keyword.declaration.host-alias
#    ^            constant.language.wildcard
    IdentityFile ~/.ssh/id_rsa
    Ciphers "aes128-ctr,aes192-ctr,aes256-ctr"
    #       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double
    #       ^                                  punctuation.definition.string.begin
    #                  ^                       punctuation.separator.sequence
    #                             ^            punctuation.separator.sequence
    #                                        ^ punctuation.definition.string.end
    UseKeychain yes
    # ^^^^^^^^^     keyword.other
    #           ^^^ constant.language.boolean
    UseRoaming no
