// SYNTAX TEST "Packages/Sass/Syntaxes/Sass.sublime-syntax"
---
# this ensures Jekyll reads the file to be transformed into CSS later
---
//^ frontmatter.jekyll punctuation.section.frontmatter.end.jekyll


// https://sass-lang.com/documentation/file.INDENTED_SYNTAX.html

// This comment will not appear in the CSS output.
  This is nested beneath the comment as well,
  so it also won't appear

/*
Sass indented syntax doesn't use { } or ;
*/

div {
//  ^ invalid.illegal.sass
  color: blue;
//           ^ invalid.illegal.sass
}
// <- invalid.illegal.sass

/*
  Property syntax with the colon before the property name
*/
#main
  :font-family sans
  :color blue
  :font-size 0.3em
  // ^ support.type.property-name.css
  // ^ - meta.selector
  //   ^ - keyword.operator

/*
  Nested selectors and &
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#nested_rules
  Variables and !global etc
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#variables_
*/
[data-type="text"]:hover,
//                ^^^^^^ entity.other.pseudo-class.css
input:not([type="radio"]):not(h1):not(custom-element):not(%placeholder), select, textarea
//                                    ^^^^^^^^^^^^^^ entity.name.tag.custom.css
//                                                        ^^^^^^^^^^^^ entity.other.attribute-name.placeholder.sass
  display: block
// ^ meta.property-name.css support.type.property-name.css
:root:hover
// <- entity.other.pseudo-class.css punctuation.definition.entity.css
// ^^ entity.other.pseudo-class.css
#main h1+.sub:not(.class)
//    ^^^^^^^^^^^^^^^^^^^ meta.selector.css
//    ^^ entity.name.tag.css
//     ^ - constant.numeric
//      ^ punctuation.separator.combinator.css
//           ^ punctuation.definition.entity.css
//               ^ punctuation.definition.group.begin

  //color: #00ff00
//  ^ comment.line
  height: 97%
//  ^ - comment.line
  animation: progress-fade-in-animation .15s ease-in
//            ^ - meta.selector
//                   ^ - keyword.operator
//                         ^ - keyword.operator
    background-color: color(var(--background, blue) blend(var(--foreground, change-color($var, $blue: 5)) 80%))
//  ^^^^^^^^^^^^^^^^ support.type.property-name.css
//                  ^ punctuation.separator.key-value.css
//                    ^^^^^ support.function.color.css
//                         ^ punctuation.definition.group.begin.css
//                          ^^^ support.function.var.css
//                             ^ punctuation.definition.group.begin.css
//                              ^^^^^^^^^^^^ support.type.custom-property
//                                          ^ punctuation.separator
//                                                ^ punctuation.definition.group.end.css
//                                                  ^^^^^ support.function.color.css
//                                                       ^ punctuation.definition.group.begin.css
//                                                        ^^^ support.function.var.css
//                                                           ^ punctuation.definition.group.begin.css
//                                                            ^^^^^^^^^^^^ support.type.custom-property.css
//                                                                                              ^ variable.other
//                                                                                                  ^ punctuation.separator
//                                                                                                      ^ punctuation.definition.group.end.css
//                                                                                                        ^^^ constant.numeric.css
//                                                                                                           ^^ punctuation.definition.group.end.css
  @document url(http://www)
    background: url($blue)
    background-color: color($mark, custom-function(unthemed))
//                          ^ variable.other
//                                 ^ support.function

  background: url('../assets/photo1-blue.jpg') center/cover no-repeat
//                                             ^ support.constant.property-value.css
//                                                    ^ support.constant.property-value.css
//                                                          ^ support.constant.property-value.css
  object-fit: scale-down
// ^^^^^^^^^ support.type.property-name.css
// ^ - meta.selector
//      ^ - keyword.operator

  $width: 5em !global
//^^^^^^ variable.declaration.sass
//^ punctuation.definition.variable.sass
//            ^^^^^^^ keyword.other.sass

  width: $width
//^^^^^ meta.property-name.css
// ^ support.type.property-name.css
//     ^ punctuation.separator.key-value.css
//       ^^^^^^ meta.property-value.css
//       ^^^^^^ variable.other.sass
//       ^ punctuation.definition.variable.sass

  -ms-text-size-adjust: 100%;
//^^^^^^^^^^^^^^^^^^^^ meta.property-name.css
//^^^^ support.type.vendor-prefix.css

  .redbox:hover
    background-color: #ff0000
    color: #000000

  &
//^^ meta.selector.css

  &:hover text-decoration: underline
//^^^^^^^^ meta.selector.css
//^ keyword.operator.ampersand.sass
// ^ entity.other.pseudo-class.css punctuation.definition.entity.css
  main
    input:-webkit-autofill,
//  ^^^^^ entity.name.tag
//        ^^^^^^^^^^^^^^^^ meta.selector.css entity.other.pseudo-class.css
//        ^^^^^^^^ support.type.vendor-prefix.css
//       ^ punctuation.definition.entity.css
    [type="submit"]:-moz-focusring,
//                  ^^^^^^^^^^^^^^ meta.selector.css entity.other.pseudo-class.css
//                  ^^^^^ support.type.vendor-prefix.css
    custom-input:-webkit-autofill:hover {}
//  ^^^^^^^^^^^^ entity.name.tag
//               ^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css entity.other.pseudo-class.css
//               ^^^^^^^^ support.type.vendor-prefix.css
//              ^ punctuation.definition.entity.css
//                               ^ punctuation.definition.entity.css
    -ms-text-size-adjust: 100%;
//  ^^^^^^^^^^^^^^^^^^^^ meta.property-name.css
//  ^^^^ support.type.vendor-prefix.css

  span:hover,
  +,
//^ punctuation.separator.combinator
  .test:first-child + &,
//                  ^ punctuation.separator.combinator
//                    ^ keyword.operator.ampersand
  .test:not(.class) &,
//                  ^ keyword.operator.ampersand

  body.firefox ~ & font-weight: normal
//^^^^^^^^^^^^^^^^^ meta.selector
//             ^ punctuation.separator.combinator.css
//               ^ keyword.operator.ampersand.sass
  &:nth-child(even) a,
//                  ^ entity.name.tag
  &-bemish
//^ keyword.operator.ampersand.sass
// ^^^^^^^ entity.other.attribute-name.css
// ^^^^^^^^ meta.selector.css
  &_bemish // test comment
//^ keyword.operator.ampersand.sass
// ^^^^^^^ entity.other.attribute-name.css
// ^^^^^^^^ meta.selector.css


@media(max-width: $break-parent) // test comment
// <- meta.at-rule.media.css keyword.control.at-rule.media.css punctuation.definition.keyword.css
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css
//    ^ punctuation.definition.group.begin.css
//     ^ support.type.property-name.media.css
//              ^ punctuation.separator.key-value.css
//                               ^ comment.line.double-slash
  will-change: transform, scroll-position
//             ^ support.constant.property-value
/*
  Nested properties
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#nested_properties
*/
.funky
  font:
//  ^ meta.property-name.css support.type.property-name.css

    family: fantasy
//                ^ meta.property-value.css support.constant.font-name.css
//  ^ meta.property-name.css support.type.property-name.css

    size: 1rem*$ratio
//  ^ meta.property-name.css support.type.property-name.css

    weight: bold
//  ^ meta.property-name.css support.type.property-name.css

  font: 20px/24px fantasy
//                ^ meta.property-value.css support.constant.font-name.css
//  ^ meta.property-name.css support.type.property-name.css

    weight: bold
//  ^ meta.property-name.css support.type.property-name.css

    width: calc((100px - 20px) / 2)
//              ^ punctuation.definition.group - string




/*
  Comments
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#comments
  block comment contains #{ $variable
  block comment contains #{ function($variable) + "escap\e" + -.5em
*/
// <- comment.block.css punctuation.definition.comment.css

// line comment
// line comment contains #{ $variable
// line comment contains #{ function($variable) + "escap\e" + -.5em
// <- comment.line.double-slash.sass punctuation.definition.comment.css

@import "imports/somefile.scss" // this should be a comment
//                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash
//                              ^^ punctuation.definition.comment

/*
  Import Statements
  http://sass-lang.com/documentation/file.SASS_REFERENCE.html#import
*/
@import "foo.css"
@import "foo" screen
//            ^ support.constant.media
@import "http://foo.com/bar"
@import url(foo)
@import "rounded-corners", "text-shadow"
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.import
//                       ^ punctuation.definition.arbitrary-repetition
#main
  @import "example"


/*
  Strings, (un)quoted, operations and interpolation
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#sass-script-strings
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#interpolation_
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#string_operations

*/

@mixin firefox-message($selector: false)
// <- punctuation.definition.keyword.sass
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function.declaration.sass
// ^ keyword.control.at-rule.sass
//     ^^^^^^^^^^^^^^^ entity.name.function.sass
//                    ^ meta.function.parameters.sass punctuation.definition.group.begin.sass
//                     ^^ meta.function.parameters.sass variable.parameter.sass
//                     ^ punctuation.definition.variable.sass
//                                 ^ constant.language
//                                     ^ meta.function.parameters.sass punctuation.definition.group.end.sass
  #{$selector + "some string"}:not(.class),
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.group.interpolation.sass
//^ punctuation.definition.variable.sass
// ^ punctuation.definition.group.begin.sass
//  ^^^^^^^^^ variable.other.sass
//  ^ punctuation.definition.variable.sass
//            ^ keyword.operator
//              ^^^^^^^^^^^^^ string.quoted.double
//                           ^ punctuation.definition.group.end.sass
//                            ^ punctuation.definition.entity.css
//                             ^ entity.other.pseudo-class.css
  &--#{$test}__123 a
//^^^^^^^^^^^^^^^^^^ meta.selector

  body.firefox #{$selector} + a:hover,
  body.firefox #{$selector} :active,
  body.firefox #{$selector}:before
//             ^^^^^^^^^^^^ meta.group.interpolation.sass
//             ^ punctuation.definition.variable.sass
//              ^ punctuation.definition.group.begin.sass
//               ^^^^^^^^^ variable.other.sass
//               ^ punctuation.definition.variable.sass
//                        ^ punctuation.definition.group.end.sass
//                         ^ punctuation.definition.entity.css
//                          ^ entity.other.pseudo-element.css

    content: "Hi, Firefox users!"
//           ^^^^^^^^^^^^^^^^^^^^ meta.property-value.css string.quoted.double.css
//           ^ punctuation.definition.string.begin.css
//                              ^ punctuation.definition.string.end.css

    content: 'Hi, Firefox users!'
//           ^^^^^^^^^^^^^^^^^^^^ meta.property-value.css string.quoted.single.css
//           ^ punctuation.definition.string.begin.css
//                              ^ punctuation.definition.string.end.css

    background: url(data:image/gifbase64,R0lGODlhEAAQAMQAAORHHOVSKudfOulrSOp3WOyDZu6QdvCchPGolfO0o/XBs/fNwfjZ0frl3/zy7////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkAABAALAAAAAAQABAAAAVVICSOZGlCQAosJ6mu7fiyZeKqNKToQGDsM8hBADgUXoGAiqhSvp5QAnQKGIgUhwFUYLCVDFCrKUE1lBavAViFIDlTImbKC5Gm2hB0SlBCBMQiB0UjIQA7)
//                  ^^^^^ string.unquoted.css

    cursor: e + -resize
//          ^ string.unquoted
//           ^ - string
//            ^ keyword.operator.sass
//             ^ - string
//              ^^^^^ string.unquoted

    content: "Foo " + Bar
//               ^ string.quoted.double
//                    ^ string.unquoted
//                       ^ - string
//                  ^ keyword.operator.sass

    font-family: sans- + "serif"
//               ^^^^^ string.unquoted
//                              ^ - string
//                     ^ keyword.operator.sass

    content: "I ate #{5 + 10} pies!"
//           ^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double
//                  ^^^^^^^^^ meta.group.interpolation.sass
//                  ^ punctuation.definition.variable.sass
//                   ^ punctuation.definition.group.begin.sass
//                    ^ constant.numeric.css
//                      ^ keyword.operator.sass
//                        ^ constant.numeric.css
//                          ^ punctuation.definition.group.end.sass
    transform: #{translate + $axis + '(' + $span * $aim + ')'}
//                           ^^^^^ variable.other
//                           ^ punctuation.definition.variable
//                                 ^ keyword.operator
//                                   ^^^ string.quoted.single
    content: "I ate #{$value} pies!"
//                    ^^^^^^ variable.other.sass
//                    ^ punctuation.definition.variable.sass

    @include breathe(somestring)
//                   ^ string.unquoted
//                             ^ - string

    @include breathe(border-bottom-color)
//                   ^^^^^^^^^^^^^^^^^^^ support.constant.property-value.css

    #{$prop}: var(--#{$color}-primary, color(primary, unthemed))
//  ^^^^^^^^ meta.group.interpolation.sass
//  ^ punctuation.definition.variable.sass
//   ^ punctuation.definition.group.begin.sass
//    ^^^^^ variable.other.sass
//    ^ punctuation.definition.variable.sass
//         ^ punctuation.definition.group.end.sass
//          ^ punctuation.separator.key-value
    #{$prop}-color: blue
//  ^^^^^^^^^^^^^^ meta.property-name
//  ^^^^^^^^ meta.group.interpolation
//          ^ - meta.group.interpolation
    background-#{$prop}: blue
//             ^^^^^^^^ meta.group.interpolation
//  ^^^^^^^^^^^^^^^^^^^ meta.property-name
//            ^ - meta.group.interpolation

@keyframes beat, bounce
//  ^^^^^^^^^^^^^^^^^^^ meta.at-rule.keyframe.css
// <-                       punctuation.definition.keyword.css
//   ^^^^^              keyword.control.at-rule.keyframe.css
//         ^^^^         entity.other.animation-name.css
//             ^        punctuation.definition.arbitrary-repetition.css
//               ^^^^^^ entity.other.animation-name.css

@keyframes #{$animation + '-' + $direction}
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.group.interpolation
    from,
    to


@include firefox-message(".header" + test)
//                       ^^^^^^^^^ meta.function-call.sass meta.function-call.arguments.sass string.quoted.double.css
//                                 ^ keyword.operator.sass
//                                   ^ string.unquoted
//                                       ^ - string


/*
  Mixin Directives
  http://sass-lang.com/documentation/file.INDENTED_SYNTAX.html#Mixin_Directives
*/

+firefox-message(".header" + test)
// <- punctuation.definition.keyword.sass
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.sass
// ^^^^^^^^^^^^^ variable.function.sass
//               ^^^^^^^^^ string.quoted.double.css
//                         ^ keyword.operator.sass
//                           ^ string.unquoted
//                               ^ - string

  +firefox-message($foo)
//^ punctuation.definition.keyword.sass
//^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.sass
//^^^^^^^^^^^^^^^^ variable.function.sass
//                 ^^^^ variable.other

=large-text
// ^^^^^^^^ entity.name.function.sass
  @content
//^^^^^^^^ keyword.control.at-rule.content
//^ punctuation.definition.keyword
  font:
    family: Arial
    size: 20px
    weight: bold
  color: #ff0000

=sexy-border($color, $width: 1in)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function.declaration
//     ^^^^^ entity.name.function
//           ^^^^^^^^^^^^^^^^^^^ meta.function.parameters
//           ^^^^^^ variable.parameter
//           ^ punctuation.definition.variable
//                 ^ punctuation.separator
//                         ^ punctuation.separator.key-value
//                           ^^^ constant.numeric
//                            ^^ keyword.other.unit

  border: $color

p
  @include sexy-border($blue)
//                     ^^^^ variable.other
h1
  @include sexy-border(blue, 2in)
//                           ^^^ constant.numeric
//                            ^^ keyword.other.unit


@function grid-width($n)
  @return $n * $grid-width + ($n - 1) * $gutter-width

#sidebar
  width: grid-width(5)

/*
  Lists, Maps
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
*/
$map: (
  $key-1: #000,
  key-2: (
    key-3: 123px
  )
)
$list: (top, bottom, right, position, height);
//      ^^^ support.constant.property-value
//         ^ punctuation.separator.css
//           ^^^ support.constant.property-value
//                 ^ punctuation.separator.css
//                   ^^^ support.constant.property-value
//                          ^^^ string.unquoted
//                                  ^ punctuation.separator.css

@each $animal, $color, $cursor in (puma, black, default),(sea-slug, blue, pointer), (egret, white, move)
  .#{$animal-icon}
    background-image: url('/images/#{$animal}.png')
    border: 2px solid $color
    cursor: $cursor

@each $item, $item2 in fn($items) {}
//                  ^ keyword.operator
//                     ^ support.function


.selector
  color: nth(map-merge($map, $map2), 3)
//       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.css meta.function-call.sass
//       ^^^ support.function.sass
//          ^ punctuation.definition.group.begin
//           ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments
//           ^^^^^^^^^ support.function.sass
//                    ^ punctuation.definition.group.begin
//                         ^ punctuation.separator.css
//                                ^ punctuation.definition.group.end



/*
  If statements
  http://sass-lang.com/documentation/file.SASS_REFERENCE.html#if
*/

@if (global-variable-exists(spritesheet-sprites))
//                                     ^ - keyword.operator
  @each $sprite in $spritesheet-sprites
    .ic--#{nth($sprite, 10)}
      &:before
        +bs($sprite)
.svg--like
  fill: transparent


@if 1 + 1 == 2
//^ keyword.control.flow.conditional.sass
//  ^ meta.at-rule constant.numeric.css
//    ^ keyword.operator.sass
//      ^ constant.numeric.css
  border: 1px solid
@if $scope == ie9
//              ^ - constant.numeric
@if null
//     ^ constant.language

/*
  Function Directives
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#function_directives
*/
@function size($size, $base: $base-font-size, $unit: null)
  @return if (
    $unit == 'px',
    strip($size) * strip($base),
//  ^ meta.function-call
//                 ^ meta.function-call
    strip($size) / strip($base) + 0.00001
//  ^ meta.function-call
  )


/*
  Operators
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#operations
*/

p
  width: $base-width + 2 * -5rem / -$var
//                    ^^^^^^^^^^^^^^^^^^ - string
//                     ^ constant.numeric
//                       ^ keyword.operator.sass
//                         ^^^^ constant.numeric
//                           ^^ keyword.other.unit.css
//                               ^ keyword.operator.sass
//                                 ^ keyword.operator.sass
//                                  ^^^^ variable.other.sass



/*
  Color Operations
  https://sass-lang.com/documentation/file.SASS_REFERENCE.html#color_operations
*/
$translucent-red: rgba(255, 0, 0, 0.5)
//                ^^^^ support.function.color.css
p
  color: opacify($translucent-red, 0.3)
//       ^^^^^^^ support.function.sass
//              ^ punctuation.definition.group.begin
//                                    ^ punctuation.definition.group.end

  background-color: transparentize($translucent-red, 0.25)
//                  ^^^^^^^ support.function.sass
  top: rgb(1, 4.5%)
//     ^^^         support.function.color.css
//         ^       constant.numeric.css
//          ^      punctuation.separator.css
//            ^^^^ constant.numeric.css

  top: rgba()
//     ^^^^ support.function.color.css

  top: hsl(1deg, 4.5%)
//     ^^^            support.function.color.css
//         ^^^^       constant.numeric.css
//             ^      punctuation.separator.css
//               ^^^^ constant.numeric.css

  top: hsla()
//     ^^^^ support.function.color.css

  top: hwb()
//     ^^^ support.function.color.css


  top: gray(1, 4.5%)
//     ^^^^         support.function.color.css
//          ^       constant.numeric.css
//           ^      punctuation.separator.css
//             ^^^^ constant.numeric.css

  top: device-cmyk(0.5, 1%, red())
//     ^^^^^^^^^^^              support.function.color.css
//                 ^^^          constant.numeric.css
//                    ^         punctuation.separator.css
//                      ^^      constant.numeric.css
//                          ^^^ support.function.color.css

  top: color(w() s())
//     ^^^^^       support.function.color.css
//           ^     support.function.color.css
//               ^ support.function.color.css

  top: alpha(- 1.5%)
//     ^^^^^        support.function.color.css
//           ^      keyword.operator.css
//             ^^^^ constant.numeric.css

  top: h(+ 1.5deg)
//     ^          support.function.color.css
//       ^        keyword.operator.css
//         ^^^^^^ constant.numeric.css

  top: w(* 1.5%)
//     ^        support.function.color.css
//       ^      keyword.operator.css
//         ^^^^ constant.numeric.css

  top: shade(1.5%)
//     ^^^^^      support.function.color.css
//           ^^^^ constant.numeric.css

  top: blenda(red 50% hsl)
//     ^^^^^^             support.function.color.css
//            ^^^         support.constant.color.w3c-standard-color-name.css
//                ^^^     constant.numeric.css
//                    ^^^ keyword.other.color-space.css

  background-color: color(var(--background) blend(var(--foreground) 80%))
//^^^^^^^^^^^^^^^^ support.type.property-name.css
//                ^ punctuation.separator.key-value.css
//                  ^^^^^ support.function.color.css
//                       ^ punctuation.definition.group.begin.css
//                        ^^^ support.function.var.css
//                           ^ punctuation.definition.group.begin.css
//                            ^^^^^^^^^^^^ support.type.custom-property
//                                        ^ punctuation.definition.group.end.css
//                                          ^^^^^ support.function.color.css
//                                               ^ punctuation.definition.group.begin.css
//                                                ^^^ support.function.var.css
//                                                   ^ punctuation.definition.group.begin.css
//                                                    ^^^^^^^^^^^^ support.type.custom-property.css
//                                                                ^ punctuation.definition.group.end.css
//                                                                  ^^^ constant.numeric.css
//                                                                     ^^ punctuation.definition.group.end.css

